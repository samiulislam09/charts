{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "editor",
  "type": "registry:block",
  "author": "shadcn (https://ui.shadcn.com)",
  "dependencies": [
    "lexical",
    "@lexical/react",
    "lucide-react"
  ],
  "registryDependencies": [
    "tooltip"
  ],
  "files": [
    {
      "path": "blocks/editor-00/page.tsx",
      "content": "'use client'\n\nimport { useState } from 'react';\nimport { SerializedEditorState } from 'lexical';\nimport { Editor } from '@/registry/default/blocks/editor-00/editor';\n\nexport const initialValue = {\n  root: {\n    children: [\n      {\n        children: [\n          {\n            detail: 0,\n            format: 0,\n            mode: 'normal',\n            style: '',\n            text: 'Hello World ðŸš€',\n            type: 'text',\n            version: 1,\n          },\n        ],\n        direction: 'ltr',\n        format: '',\n        indent: 0,\n        type: 'paragraph',\n        version: 1,\n      },\n    ],\n    direction: 'ltr',\n    format: '',\n    indent: 0,\n    type: 'root',\n    version: 1,\n  },\n} as unknown as SerializedEditorState\n\nexport default function EditorPage() {\n  const [editorState, setEditorState] =\n    useState<SerializedEditorState>(initialValue)\n  return (\n    <Editor\n      editorSerializedState={editorState}\n      onSerializedChange={(value) => setEditorState(value)}\n    />\n  )\n}\n\n",
      "type": "registry:page",
      "target": "app/editor-00/page.tsx"
    },
    {
      "path": "blocks/editor-00/editor.tsx",
      "content": "'use client'\n\nimport {\n  InitialConfigType,\n  LexicalComposer,\n} from '@lexical/react/LexicalComposer'\nimport { OnChangePlugin } from '@lexical/react/LexicalOnChangePlugin'\nimport { EditorState, SerializedEditorState } from 'lexical'\n\nimport { editorTheme } from '@/registry/default/editor/themes/editor-theme'\nimport { TooltipProvider } from '@/registry/default/ui/tooltip'\n\nimport { nodes } from './nodes'\nimport { Plugins } from './plugins'\n\nconst editorConfig: InitialConfigType = {\n  namespace: 'Editor',\n  theme: editorTheme,\n  nodes,\n  onError: (error: Error) => {\n    console.error(error)\n  },\n}\n\nexport function Editor({\n  editorState,\n  editorSerializedState,\n  onChange,\n  onSerializedChange,\n}: {\n  editorState?: EditorState\n  editorSerializedState?: SerializedEditorState\n  onChange?: (editorState: EditorState) => void\n  onSerializedChange?: (editorSerializedState: SerializedEditorState) => void\n}) {\n  return (\n    <div className=\"overflow-hidden rounded-lg border bg-background shadow\">\n      <LexicalComposer\n        initialConfig={{\n          ...editorConfig,\n          ...(editorState ? { editorState } : {}),\n          ...(editorSerializedState\n            ? { editorState: JSON.stringify(editorSerializedState) }\n            : {}),\n        }}\n      >\n        <TooltipProvider>\n          <Plugins />\n\n          <OnChangePlugin\n            ignoreSelectionChange={true}\n            onChange={(editorState) => {\n              onChange?.(editorState)\n              onSerializedChange?.(editorState.toJSON())\n            }}\n          />\n        </TooltipProvider>\n      </LexicalComposer>\n    </div>\n  )\n}\n",
      "type": "registry:block",
      "target": "components/blocks/editor-00/editor.tsx"
    },
    {
      "path": "blocks/editor-00/nodes.ts",
      "content": "import { Klass, LexicalNode, LexicalNodeReplacement, ParagraphNode, TextNode } from 'lexical'\nimport { HeadingNode, QuoteNode } from \"@lexical/rich-text\"\n\nexport const nodes: ReadonlyArray<Klass<LexicalNode> | LexicalNodeReplacement> =\n  [\n    HeadingNode,\n    ParagraphNode,\n    TextNode,\n    QuoteNode,\n  ]\n",
      "type": "registry:block",
      "target": "components/blocks/editor-00/nodes.ts"
    },
    {
      "path": "blocks/editor-00/plugins.tsx",
      "content": "import { useState } from 'react';\nimport { LexicalErrorBoundary } from '@lexical/react/LexicalErrorBoundary';\nimport { RichTextPlugin } from '@lexical/react/LexicalRichTextPlugin';\nimport { ContentEditable } from '@/registry/default/editor/editor-ui/content-editable';\n\nexport function Plugins() {\n  const [floatingAnchorElem, setFloatingAnchorElem] =\n    useState<HTMLDivElement | null>(null);\n\n  const onRef = (_floatingAnchorElem: HTMLDivElement) => {\n    if (_floatingAnchorElem !== null) {\n      setFloatingAnchorElem(_floatingAnchorElem);\n    }\n  };\n\n  return (\n    <div className=\"relative\">\n      {/* toolbar plugins */}\n      <div className=\"relative\">\n        <RichTextPlugin\n          contentEditable={\n            <div className=\"\">\n              <div className=\"\" ref={onRef}>\n                <ContentEditable placeholder={'Start typing ...'} />\n              </div>\n            </div>\n          }\n          ErrorBoundary={LexicalErrorBoundary}\n        />\n        {/* editor plugins */}\n      </div>\n      {/* actions plugins */}\n    </div>\n  );\n}\n",
      "type": "registry:block",
      "target": "components/blocks/editor-00/plugins.tsx"
    },
    {
      "path": "editor/themes/editor-theme.ts",
      "content": "import { EditorThemeClasses } from 'lexical'\n\nimport './editor-theme.css'\n\nexport const editorTheme: EditorThemeClasses = {\n  ltr: 'text-left',\n  rtl: 'text-right',\n  heading: {\n    h1: 'scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl',\n    h2: 'scroll-m-20 border-b pb-2 text-3xl font-semibold tracking-tight first:mt-0',\n    h3: 'scroll-m-20 text-2xl font-semibold tracking-tight',\n    h4: 'scroll-m-20 text-xl font-semibold tracking-tight',\n    h5: 'scroll-m-20 text-lg font-semibold tracking-tight',\n    h6: 'scroll-m-20 text-base font-semibold tracking-tight',\n  },\n  paragraph: 'leading-7 [&:not(:first-child)]:mt-6',\n  quote: 'mt-6 border-l-2 pl-6 italic',\n  link: 'text-blue-600 hover:underline hover:cursor-pointer',\n  list: {\n    checklist: 'relative',\n    listitem: 'mx-8',\n    listitemChecked:\n      'relative mx-2 px-6 list-none outline-none line-through before:content-[\"\"] before:w-4 before:h-4 before:top-0.5 before:left-0 before:cursor-pointer before:block before:bg-cover before:absolute before:border before:border-primary before:rounded before:bg-primary before:bg-no-repeat after:content-[\"\"] after:cursor-pointer after:border-white after:border-solid after:absolute after:block after:top-[6px] after:w-[3px] after:left-[7px] after:right-[7px] after:h-[6px] after:rotate-45 after:border-r-2 after:border-b-2 after:border-l-0 after:border-t-0',\n    listitemUnchecked:\n      'relative mx-2 px-6 list-none outline-none before:content-[\"\"] before:w-4 before:h-4 before:top-0.5 before:left-0 before:cursor-pointer before:block before:bg-cover before:absolute before:border before:border-primary before:rounded',\n    nested: {\n      listitem: 'list-none before:hidden after:hidden',\n    },\n    ol: 'my-6 ml-6 list-decimal [&>li]:mt-2',\n    olDepth: [\n      'list-outside !list-decimal',\n      'list-outside !list-[upper-roman]',\n      'list-outside !list-[lower-roman]',\n      'list-outside !list-[upper-alpha]',\n      'list-outside !list-[lower-alpha]',\n    ],\n    ul: 'm-0 p-0 list-outside',\n  },\n  hashtag: 'text-blue-600 bg-blue-100 rounded-md px-1',\n  text: {\n    bold: 'font-bold',\n    code: 'bg-gray-100 p-1 rounded-md',\n    italic: 'italic',\n    strikethrough: 'line-through',\n    subscript: 'sub',\n    superscript: 'sup',\n    underline: 'underline',\n    underlineStrikethrough: 'underline line-through',\n  },\n  image: 'relative inline-block user-select-none cursor-default editor-image',\n  inlineImage:\n    'relative inline-block user-select-none cursor-default inline-editor-image',\n  keyword: 'text-purple-900 font-bold',\n  code: 'EditorTheme__code',\n  codeHighlight: {\n    atrule: 'EditorTheme__tokenAttr',\n    attr: 'EditorTheme__tokenAttr',\n    boolean: 'EditorTheme__tokenProperty',\n    builtin: 'EditorTheme__tokenSelector',\n    cdata: 'EditorTheme__tokenComment',\n    char: 'EditorTheme__tokenSelector',\n    class: 'EditorTheme__tokenFunction',\n    'class-name': 'EditorTheme__tokenFunction',\n    comment: 'EditorTheme__tokenComment',\n    constant: 'EditorTheme__tokenProperty',\n    deleted: 'EditorTheme__tokenProperty',\n    doctype: 'EditorTheme__tokenComment',\n    entity: 'EditorTheme__tokenOperator',\n    function: 'EditorTheme__tokenFunction',\n    important: 'EditorTheme__tokenVariable',\n    inserted: 'EditorTheme__tokenSelector',\n    keyword: 'EditorTheme__tokenAttr',\n    namespace: 'EditorTheme__tokenVariable',\n    number: 'EditorTheme__tokenProperty',\n    operator: 'EditorTheme__tokenOperator',\n    prolog: 'EditorTheme__tokenComment',\n    property: 'EditorTheme__tokenProperty',\n    punctuation: 'EditorTheme__tokenPunctuation',\n    regex: 'EditorTheme__tokenVariable',\n    selector: 'EditorTheme__tokenSelector',\n    string: 'EditorTheme__tokenSelector',\n    symbol: 'EditorTheme__tokenProperty',\n    tag: 'EditorTheme__tokenProperty',\n    url: 'EditorTheme__tokenOperator',\n    variable: 'EditorTheme__tokenVariable',\n  },\n  characterLimit: '!bg-destructive/50',\n  table: 'EditorTheme__table w-fit overflow-scroll border-collapse',\n  tableCell:\n    'EditorTheme__tableCell w-24 relative border px-4 py-2 text-left [&[align=center]]:text-center [&[align=right]]:text-right\"',\n  tableCellActionButton:\n    'EditorTheme__tableCellActionButton bg-background block border-0 rounded-2xl w-5 h-5 text-foreground cursor-pointer',\n  tableCellActionButtonContainer:\n    'EditorTheme__tableCellActionButtonContainer block right-1 top-1.5 absolute z-10 w-5 h-5',\n  tableCellEditing: 'EditorTheme__tableCellEditing rounded-sm shadow-sm',\n  tableCellHeader:\n    'EditorTheme__tableCellHeader bg-muted border px-4 py-2 text-left font-bold [&[align=center]]:text-center [&[align=right]]:text-right',\n  tableCellPrimarySelected:\n    'EditorTheme__tableCellPrimarySelected border border-primary border-solid block h-[calc(100%-2px)] w-[calc(100%-2px)] absolute -left-[1px] -top-[1px] z-10 ',\n  tableCellResizer:\n    'EditorTheme__tableCellResizer absolute -right-1 h-full w-2 cursor-ew-resize z-10 top-0',\n  tableCellSelected: 'EditorTheme__tableCellSelected bg-muted',\n  tableCellSortedIndicator:\n    'EditorTheme__tableCellSortedIndicator block opacity-50 bsolute bottom-0 left-0 w-full h-1 bg-muted',\n  tableResizeRuler:\n    'EditorTheme__tableCellResizeRuler block absolute w-[1px] h-full bg-primary top-0',\n  tableRowStriping:\n    'EditorTheme__tableRowStriping m-0 border-t p-0 even:bg-muted',\n  tableSelected: 'EditorTheme__tableSelected ring-2 ring-primary ring-offset-2',\n  tableSelection: 'EditorTheme__tableSelection bg-transparent',\n  layoutItem: 'border border-dashed px-4 py-2',\n  layoutContainer: 'grid gap-2.5 my-2.5 mx-0',\n  autocomplete: 'text-muted-foreground',\n  blockCursor: '',\n  embedBlock: {\n    base: 'user-select-none',\n    focus: 'ring-2 ring-primary ring-offset-2',\n  },\n  hr: 'p-0.5 border-none my-1 mx-0 cursor-pointer after:content-[\"\"] after:block after:h-0.5 after:bg-muted selected:ring-2 selected:ring-primary selected:ring-offset-2 selected:user-select-none',\n  indent: '[--lexical-indent-base-value:40px]',\n  mark: '',\n  markOverlap: '',\n}\n",
      "type": "registry:theme",
      "target": "components/editor/themes/editor-theme.ts"
    },
    {
      "path": "editor/themes/editor-theme.css",
      "content": ".EditorTheme__code {\n  background-color: transparent;\n  font-family: Menlo, Consolas, Monaco, monospace;\n  display: block;\n  padding: 8px 8px 8px 52px;\n  line-height: 1.53;\n  font-size: 13px;\n  margin: 0;\n  margin-top: 8px;\n  margin-bottom: 8px;\n  overflow-x: auto;\n  border: 1px solid #ccc;\n  position: relative;\n  border-radius: 8px;\n  tab-size: 2;\n}\n.EditorTheme__code:before {\n  content: attr(data-gutter);\n  position: absolute;\n  background-color: transparent;\n  border-right: 1px solid #ccc;\n  left: 0;\n  top: 0;\n  padding: 8px;\n  color: #777;\n  white-space: pre-wrap;\n  text-align: right;\n  min-width: 25px;\n}\n.EditorTheme__table {\n  border-collapse: collapse;\n  border-spacing: 0;\n  overflow-y: scroll;\n  overflow-x: scroll;\n  table-layout: fixed;\n  width: fit-content;\n  width: 100%;\n  margin: 0px 25px 30px 0px;\n}\n.EditorTheme__tokenComment {\n  color: slategray;\n}\n.EditorTheme__tokenPunctuation {\n  color: #999;\n}\n.EditorTheme__tokenProperty {\n  color: #905;\n}\n.EditorTheme__tokenSelector {\n  color: #690;\n}\n.EditorTheme__tokenOperator {\n  color: #9a6e3a;\n}\n.EditorTheme__tokenAttr {\n  color: #07a;\n}\n.EditorTheme__tokenVariable {\n  color: #e90;\n}\n.EditorTheme__tokenFunction {\n  color: #dd4a68;\n}\n\n.Collapsible__container {\n  background-color: var(--background);\n  border: 1px solid #ccc;\n  border-radius: 0.5rem;\n  margin-bottom: 0.5rem;\n}\n\n.Collapsible__title{\n  padding: 0.25rem;\n  padding-left: 1rem;\n  position: relative;\n  font-weight: bold;\n  outline: none;\n  cursor: pointer;\n  list-style-type: disclosure-closed;\n  list-style-position: inside;\n}\n\n.Collapsible__title p{\n  display: inline-flex;\n}\n.Collapsible__title::marker{\n  color: lightgray;\n}\n.Collapsible__container[open] >.Collapsible__title {\n  list-style-type: disclosure-open;\n}\n",
      "type": "registry:theme",
      "target": "components/editor/themes/editor-theme.css"
    },
    {
      "path": "editor/editor-ui/content-editable.tsx",
      "content": "import { JSX } from 'react'\nimport { ContentEditable as LexicalContentEditable } from '@lexical/react/LexicalContentEditable'\n\ntype Props = {\n  placeholder: string\n  className?: string\n  placeholderClassName?: string\n}\n\n\nexport function ContentEditable({\n  placeholder,\n  className,\n  placeholderClassName,\n}: Props): JSX.Element {\n  return (\n    <LexicalContentEditable\n      className={\n        className ??\n        `ContentEditable__root relative block min-h-72 overflow-auto min-h-full px-8 py-4 focus:outline-none`\n      }\n      aria-placeholder={placeholder}\n      placeholder={\n        <div\n          className={\n            placeholderClassName ??\n\n            `pointer-events-none absolute left-0 top-0 select-none overflow-hidden text-ellipsis px-8 py-[18px] text-muted-foreground`\n          }\n        >\n          {placeholder}\n        </div>\n      }\n    />\n  )\n}\n",
      "type": "registry:ui",
      "target": "components/editor/editor-ui/content-editable.tsx"
    }
  ]
}